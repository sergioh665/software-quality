name: Vue.js CI # Nome do workflow

on: # Definir quando o workflow será executado
  push: # Quando houver um push na branch main
    branches:
      - main
  pull_request: # Quando houver um pull request na branch main
    branches:
      - main

jobs: # Definir os jobs do pipeline
  build:
    runs-on: ubuntu-latest # Ambiente onde será executado (Ubuntu)

    steps:
      - name: Checkout repository # Clonar o repositório
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js # Configurar o ambiente Node.js
        uses: actions/setup-node@v4.2.0
        with:
          node-version: "18"

      - name: Set up Java JDK # Configurar o ambiente Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Install dependencies # Instalar dependências
        run: npm ci --prefix AluguelFestas # Usa npm ci para garantir builds reproduzíveis

      - name: Check for code duplication # Verificar duplicação de código
        run: npx jscpd AluguelFestas/src/views/Temas

      - name: Install Graphviz # Instalar Graphviz para PlantUML
        run: sudo apt-get install -y graphviz

      - name: Download PlantUML # Baixar PlantUML
        run: wget -O plantuml.jar http://sourceforge.net/projects/plantuml/files/plantuml.jar/download

      - name: Generate UML Diagrams # Gerar diagramas UML
        run: java -jar plantuml.jar -tpng diagramas/todos.puml -o diagramas/

      - name: Upload UML Diagrams # Fazer upload dos diagramas UML
        uses: actions/upload-artifact@v4.6.0
        with:
          name: uml-diagrams
          path: diagramas/todos.png

      - name: Run ESLint # Executar ESLint
        run: npx eslint --config AluguelFestas/eslint.config.mjs "AluguelFestas/src/views/alugueis/AlugueisList.vue"

      - name: Check for deprecated code # Verificar APIs depreciadas
        run: npx eslint --rule 'no-deprecated-api: warn' "AluguelFestas/src/**/*.js"

      - name: Run SonarQube Scanner # Executar SonarQube
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
        run: |
          cd AluguelFestas
          npx sonarqube-scanner

      - name: Build project # Fazer o build do projeto
        run: npm run build --prefix AluguelFestas

      - name: Upload production-ready build files # Fazer upload do build final
        uses: actions/upload-artifact@v4.6.0
        with:
          name: build
          path: AluguelFestas/dist
