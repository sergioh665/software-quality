name: Vue.js CI #nome do workflow

on: #definir quando o workflow será executado
  push: #quando houver um push na branch main
    branches:
      - main
  pull_request: #quando houver um pull request na branch main
    branches:
      - main

jobs: #definir o que sera executado
  build: #nome do trabalho "job", pode ser qualquer um
    runs-on: ubuntu-latest #definir o ambiente onde vai ser executado (ubuntu)

    steps: #passos
      - name: Checkout repository #clonar o repositório
        uses: actions/checkout@v4.2.1 #usar a action checkout

      - name: Set up Node.js #configurar o ambiente node
        uses: actions/setup-node@v4.0.4 #usar a action setup-node
        with:
          node-version: "21.7.1" #versão do node

      - name: Set up Java JDK #configurar o Java
        uses: actions/setup-java@v3 #usar a action setup-java
        with:
          java-version: "21" #definir a versão do Java
          distribution: "temurin" #distribuição

      - name: Install dependencies #instalar as dependencias
        run: npm install --prefix AluguelFestas #instalar as dependencias na pasta AluguelFestas

      - name: Install jscpd globally #instalar jscpd globalmente
        run: npm install -g jscpd #instalar jscpd globalmente

      - name: Check for code duplication #verificar duplicação de código nos arquivos especificados
        run: jscpd AluguelFestas/src/views/Temas #verificar arquivos duplicados na pasta Temas

      - name: Install Graphviz #instalar Graphviz
        run: sudo apt-get install graphviz #instalar Graphviz

      - name: Download PlantUML #baixar PlantUML para gerar diagramas
        run: wget http://sourceforge.net/projects/plantuml/files/plantuml.jar/download -O plantuml.jar #baixar PlantUML

      - name: Generate UML Diagrams #gerar diagramas UML
        run: | #script para gerar diagramas UML
          java -jar diagramas/plantuml.jar -tpng diagramas/todos.puml -o ./

      - name: Upload UML Diagrams #fazer o upload dos diagramas UML
        uses: actions/upload-artifact@v4.4.3 #usar a action upload-artifact
        with:
          name: uml-diagrams # Nome do artefato
          path: diagramas/todos.png # Caminho para o arquivo a ser enviado

      - name: Install ESLint #instalar ESLint
        run: npm install eslint --prefix AluguelFestas #instalar ESLint na pasta AluguelFestas

      - name: Run ESLint #executar ESLint para identificar code smells
        run: npx eslint "AluguelFestas/src/**/*.{js,jsx,ts,tsx,vue}" #executar ESLint nos arquivos de código

      - name: Build project #buildar o projeto
        run: npm run build --prefix AluguelFestas #executar o build na pasta AluguelFestas

      - name: Upload production-ready build files #fazer o upload dos arquivos de build ou deploy
        uses: actions/upload-artifact@v4.4.3
        with:
          name: build
          path: AluguelFestas/dist #caminho para os arquivos de build


      # - name: SonarCloud Scan #executar a análise do SonarCloud
      #   uses: SonarSource/sonarcloud-github-action@v1.5
      #   with:
      #     project-key: ${{ secrets.SONAR_PROJECT_KEY }}
      #     organization: ${{ secrets.SONAR_ORGANIZATION }}
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
